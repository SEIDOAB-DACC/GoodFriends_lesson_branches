To create the AppWebApi, all Azure resources and publish

1. Copy your Azure tenantId into file _scripts/data-access/az-access/az-settings.json and _scripts/data-access/az-access/az-settings-template.json under tag "tenantId""
   "tenantId": "your-tenant-id",

   Set a user and password sql for sql server into file _scripts/az-secrets/az-sql-access.json
   {
   "sqlRootUser": "your-name",
   "sqlRootPassword": "your-strong-password"
   }

2. Give your Azure resources a unique suffix by opening a terminal in _scripts/azure and run
   macOS
   ./az-new-settings.sh ./az-resource-params/data-access

   Windows
   ./az-new-settings.ps1 ./az-resource-params/data-access

   You can now see all your Azure parameters in below files. These will be used by all the scripts

   _scripts/data-access/az-access/az-settings.json
   _scripts/az-secrets/az-sql-access.json


3. Create all resources in Azure.
   Resource group, KeyVault, Application tenant to read KV, SQL databas
   In UserSecrets you see the full path to your azure resource settings under tag ApplicationSecrets:AzureSettings   
   
   You can use the scripts by opening a terminal in _scripts/azure and run
   You can use the scripts by opening a terminal in _scripts/azure and run
   macOS
      ./az-create-all.sh ./az-resource-params/data-access ../../Configuration/Configuration.csproj

   Windows
      ./az-create-all.ps1 ./az-resource-params/data-access ../../Configuration/Configuration.csproj

   Log in to your Azure account and confirm the resources


4. Place the Azure settings location, full path to AzureSettings tag in appsettings.json 
   Examples
   macOS
      "AzureSettings": "/Users/Martin/Development/projects/DataAccess_and_WebApi_Aug_2025/GoodFriends_lesson_branches/_scripts/azure/az-resource-params/data-access"
   Windows
      "AzureSettings": "C:\\Users\\Martin\\Development\\dataAccess\\GoodFriends_lesson_branches\\_scripts\\azure\\az-resource-params\\data-accesss"

5. All role based connection strings are generated by Azure and stored by the scripts in the file
   
   macOS
   /data-access/az-secrets/az-sql-con-string.json

   Windows
   \data-access\az-secrets\az-sql-con-string.json

   Update the Azure sql connection strings in User secrets by replacing the user secrets block with the block in the generated file
   "sql-friends.sqlserver.azure.root" : "..."
   "sql-friends.sqlserver.azure.dbo" : "..."
   "sql-friends.sqlserver.azure.usr" : "..."
   "sql-friends.sqlserver.azure.supusr"  : "..."
   "sql-friends.sqlserver.azure.gstusr"  : "..."


6. Create the database. With Terminal in folder _scripts 
   
   macOs
   ./database-rebuild-all.sh sqlserver azure
   
   Windows
   ./database-rebuild-all.ps1 sqlserver azure

   Ensure no errors from build, migration or database update


7. From Azure Data Studio you can now connect to the database
   Use connection string from user secrets:
   connection string corresponding to Tag
   "sql-friends.<db_type>.azure.root"

8. Use Azure Data Studio to execute SQL script DbContext/SqlScripts/<db_type>/azure/initDatabase.sql

9. Run AppWebApi with or without debugger

   Without debugger:   
   Open a Terminal in folder AppWebApi run: 
   dotnet run -lp https 
   open url: https://localhost:7066/swagger

   Verify your can execute endpoint Admin/Environment and Guest/Info

10. Use endpoint Admin/SeedUsers to seed users into the database

11. Use endpoint Guest/LoginUser to login as dbo1
{
  "userNameOrEmail": "dbo1",
  "password": "dbo1"
}

12. Authorize using Swagger Authorize butto and paste in the encryptedToken recieved after login.
    NOTE!!: Copy and paste the encryptedToken WITHIN the quotation, i.e. WITHOUT the first and last quotation mark "

13. Use endpoint Admin/Seed to seed the database, Admin/RemoveSeed to remove the seed
   Verify database seed with endpoint Guest/Info
   As dbo you can now use and play with all endpoints
